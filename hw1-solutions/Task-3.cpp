#include <iostream>

using namespace std;


int main()
{
    unsigned long num;
    cin >> num;
    bool ans = true;

    // Предвид използваните към момента компилатори и платформи числото е с 32 бита, което е 4 байта или 8 шестнадесетични цифри
    // Взимаме в D1 до D4 съответните байтове на числото
    unsigned char D1 = (num >> 24);
    unsigned char D2 = (num >> 16) & 0xFF;
    unsigned char D3 = (num >> 8) & 0xFF;
    unsigned char D4 = num & 0xFF;

    // Проверяваме дали последните две шестнадесетични цифри са еднакви
    unsigned char test = (D4 & 0xF) ^ (D4 >> 4);
    // Ако не са всичко без последната цифра трява е 0 - това и проверяваме
    if (test != 0) ans = (D1 + D2 + D3 + (D4 >> 4) == 0);

    // Правим подобен трик със следващите цифри
    test = (D3 & 0xF) ^ (D3 >> 4);
    if (test != 0) ans &= (D1 + D2 + (D3 >> 4) == 0) && (D3 & 0xF) == (D4 & 0xF);

    test = (D2 & 0xF) ^ (D2 >> 4);
    if (test != 0) ans &= (D1 + (D2 >> 4) == 0) && (D2 & 0xF) == (D4 & 0xF);

    test = (D1 & 0xF) ^ (D1 >> 4);
    if (test != 0) ans &= (D1 >> 4) == 0 && (D1 & 0xF) == (D4 & 0xF);

    // Накрая знем, че числото започва с определен брой нули и всеки пълен байт
    // е с еднакви шестнадесетични цифри.
    // Проверяваме дали старшите полу-байтове са еднакви или 0
    // За целта извличаме тези поу-байтове
    D1 >>= 4; D2 >>= 4; D3 >>= 4; D4 >>= 4;
    if (ans)
        ans = (D3 == 0) ||
              (D4 == D3 && D2 == 0) ||
              (D4 == D3 && D3 == D2 && D1 == 0) ||
              (D4 == D3 && D3 == D2 && D2 == D1);

    // И всички случаи са проверени
    cout << (ans ? "Yes" : "No") << endl;
    return 0;
}
